// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7iuSa1MtYgfxVkY23CKsNe
import * as React from "react";
import { ParallaxProviderWrapper } from "@plasmicpkgs/react-scroll-parallax"; // plasmic-import: L6MfauX2Cw/codeComponent
import { ContentStackCredentialsProvider } from "@plasmicpkgs/plasmic-contentstack"; // plasmic-import: bk5RNde8kLM/codeComponent
import { CmsCredentialsProvider } from "@plasmicpkgs/plasmic-cms"; // plasmic-import: OREVbGCcgN/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  parallaxProviderWrapperProps?: Partial<
    Omit<React.ComponentProps<typeof ParallaxProviderWrapper>, "children">
  >;

  contentStackCredentialsProviderProps?: Partial<
    Omit<
      React.ComponentProps<typeof ContentStackCredentialsProvider>,
      "children"
    >
  >;

  cmsCredentialsProviderProps?: Partial<
    Omit<React.ComponentProps<typeof CmsCredentialsProvider>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    parallaxProviderWrapperProps,
    contentStackCredentialsProviderProps,
    cmsCredentialsProviderProps
  } = props;

  return (
    <ParallaxProviderWrapper
      {...parallaxProviderWrapperProps}
      scrollAxis={
        parallaxProviderWrapperProps &&
        "scrollAxis" in parallaxProviderWrapperProps
          ? parallaxProviderWrapperProps.scrollAxis!
          : undefined
      }
    >
      <ContentStackCredentialsProvider
        {...contentStackCredentialsProviderProps}
        accessToken={
          contentStackCredentialsProviderProps &&
          "accessToken" in contentStackCredentialsProviderProps
            ? contentStackCredentialsProviderProps.accessToken!
            : ("cs5b69faf35efdebd91d08bcf4" as const)
        }
        apiKey={
          contentStackCredentialsProviderProps &&
          "apiKey" in contentStackCredentialsProviderProps
            ? contentStackCredentialsProviderProps.apiKey!
            : ("blt02f7b45378b008ee" as const)
        }
        environment={
          contentStackCredentialsProviderProps &&
          "environment" in contentStackCredentialsProviderProps
            ? contentStackCredentialsProviderProps.environment!
            : ("production" as const)
        }
      >
        <CmsCredentialsProvider
          {...cmsCredentialsProviderProps}
          databaseId={
            cmsCredentialsProviderProps &&
            "databaseId" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseId!
              : ("wa4E31DSMijuGgM4cfaSe" as const)
          }
          databaseToken={
            cmsCredentialsProviderProps &&
            "databaseToken" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.databaseToken!
              : ("gc7H8Vm9HyaS2BHnQU8oHE6fwZSSGEpAvPbSANqjMRloUvrsQqziTqfb3Hg7V3OOUVuF5Nma3TDlbm31xKaew" as const)
          }
          host={
            cmsCredentialsProviderProps && "host" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.host!
              : ("https://studio.plasmic.app" as const)
          }
          locale={
            cmsCredentialsProviderProps &&
            "locale" in cmsCredentialsProviderProps
              ? cmsCredentialsProviderProps.locale!
              : undefined
          }
        >
          {children}
        </CmsCredentialsProvider>
      </ContentStackCredentialsProvider>
    </ParallaxProviderWrapper>
  );
}
